# enable Docker for your repository
options:
  docker: true

pipelines:
  custom: # Pipelines that can only be triggered manually
    sonar:
      - step:
          script:
            - echo "Manual triggers for Sonar are awesome!"
    deployment-to-prod:
      - step:
          script:
            - echo "Manual triggers for deployments are awesome!"
  branches:
    master:
      - step:
          #python image with aws-cli installed
          image: atlassian/pipelines-awscli
          script:
            - apk add curl
            # aws login for docker so we can push image later
            - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
            # add bits react needs to build_env file
            - echo REACT_APP_STORE_CODE=$REACT_APP_STORE_CODE > build_env
            - echo REACT_APP_CLOUDAMQP_HOSTNAME=$REACT_APP_CLOUDAMQP_HOSTNAME >> build_env
            - echo REACT_APP_CLOUDAMQP_USERNAME=$REACT_APP_CLOUDAMQP_USERNAME >> build_env
            - echo REACT_APP_CLOUDAMQP_PASSWORD=$REACT_APP_CLOUDAMQP_PASSWORD >> build_env
            - echo REACT_APP_BRAINTREE_ENV=$REACT_APP_BRAINTREE_ENV >> build_env
            - echo REACT_APP_BRAINTREE_CLIENT_AUTHORIZATION=$REACT_APP_BRAINTREE_CLIENT_AUTHORIZATION >> build_env
            # build the image
            - export AWS_REGISTRY_URL=${AWS_REGISTRY_URL}/${BITBUCKET_REPO_SLUG}
            - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
            - docker image build --build-arg GIT_COMMIT=${BITBUCKET_COMMIT} -t ${AWS_REGISTRY_URL}:$BUILD_ID -t ${AWS_REGISTRY_URL}:latest .
            - rm -rf build_env
            # push to repo
            - docker push ${AWS_REGISTRY_URL}:latest
            - docker push ${AWS_REGISTRY_URL}:$BUILD_ID
            # deploy to stagging site
            - curl -X POST ${UPDATE_WEBHOOK}
        services:
          - docker
        caches:
          - docker

definitions:
  services:
    docker:
      memory: 3072
